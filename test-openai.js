import OpenAI from 'openai';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

async function testOpenAI() {
  console.log('üîç Testando configura√ß√£o OpenAI...\n');
  
  // Verificar se a chave est√° configurada
  if (!process.env.OPENAI_API_KEY) {
    console.error('‚ùå OPENAI_API_KEY n√£o est√° configurada no arquivo .env');
    console.log('   Por favor, adicione: OPENAI_API_KEY=sua-chave-aqui');
    return;
  }
  
  console.log('‚úÖ OPENAI_API_KEY encontrada');
  console.log(`   Primeiros caracteres: ${process.env.OPENAI_API_KEY.substring(0, 8)}...`);
  
  try {
    const openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    });
    
    console.log('\nüì§ Testando chamada para OpenAI...');
    
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: "Voc√™ √© um assistente √∫til."
        },
        {
          role: "user",
          content: "Responda apenas: OK"
        }
      ],
      temperature: 0,
      max_tokens: 10
    });
    
    console.log('‚úÖ OpenAI funcionando corretamente!');
    console.log(`   Resposta: ${completion.choices[0].message.content}`);
    
    // Testar categoriza√ß√£o
    console.log('\nüì§ Testando categoriza√ß√£o...');
    
    const categorizationTest = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: "Categorize o seguinte texto em uma destas categorias: Cadastro e Conta, Produtos, Geral. Responda apenas com o nome da categoria."
        },
        {
          role: "user",
          content: "Como fa√ßo para resetar minha senha?"
        }
      ],
      temperature: 0,
      max_tokens: 20
    });
    
    console.log('‚úÖ Categoriza√ß√£o funcionando!');
    console.log(`   Categoria detectada: ${categorizationTest.choices[0].message.content}`);
    
  } catch (error) {
    console.error('\n‚ùå Erro ao conectar com OpenAI:', error.message);
    
    if (error.message.includes('401')) {
      console.log('   ‚Üí Chave de API inv√°lida');
    } else if (error.message.includes('429')) {
      console.log('   ‚Üí Limite de requisi√ß√µes excedido');
    } else if (error.message.includes('insufficient_quota')) {
      console.log('   ‚Üí Cota insuficiente (sem cr√©ditos)');
    }
  }
}

// Executar teste
testOpenAI();
